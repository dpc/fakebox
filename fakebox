#!/bin/bash
#
# Fakebox, a simple cross-compilation toolkit
#
# Copyright (C) 2007 by Pawel Foremski <pjf@asn.pl>
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place - Suite 330, Boston, MA 02111-1307, USA.
#
# vim: tw=120
#

config="${1:-./fakebox.conf}"

###
### configuration
###

[ -d "$config" ] && config="$config/fakebox.conf"
if [ ! -f "$config" ]; then
	echo "Error: configuration file not found: $config" >&2
	exit 1
fi

# load config
source $config

###
### defaults
###

# paths to toolchain and virtual root, relative to $FB_TOP
FB_TOOLCHAIN=${FB_TOOLCHAIN:-toolchain}
FB_ROOTFS=${FB_ROOTFS:-rootfs}

# absolute path to top dir, containing configs, toolchain, etc
FB_TOP=${FB_TOP:-`pwd`}

# wrapper prefix
FB_WRAP="${FB_WRAP:-$FB_TOP/$FB_TOOLCHAIN/bin/$FB_PREFIX}"

# path to fakebox
FB_PATH=${FB_PATH:-$FB_TOP/fakebox}

# id displayed in bash prompt
FB_NAME=${FB_NAME:-fakebox}

export FB_TOOLCHAIN FB_ROOTFS FB_WRAP FB_TOP FB_PATH FB_NAME

# local modifications
[ -e "${config%.conf}-local.conf" ] && source "${config%.conf}-local.conf"

# path
if [ -z "$FB_LEAVE_PATH" ]; then
	PATH="$FB_PATH/wrappers:$FB_PATH/pkgtools"
	PATH="$PATH:$FB_TOP/$FB_TOOLCHAIN/bin"
#	PATH="$PATH:$FB_TOP/$FB_ROOTFS/bin:$FB_TOP/$FB_ROOTFS/usr/bin"
#	PATH="$PATH:$FB_TOP/$FB_ROOTFS/sbin:$FB_TOP/$FB_ROOTFS/usr/sbin"
	PATH="$PATH:~/bin:/usr/local/bin:/usr/local/sbin"
	PATH="$PATH:/usr/bin:/usr/sbin:/bin:/sbin"
	export PATH
fi

# hack for c preprocessor in some weird toolchains
export CPP="cpp"

# shortcuts
export FB_ROOTDIR=$FB_TOP/$FB_ROOTFS
export FB_TOOLSDIR=$FB_TOP/$FB_TOOLCHAIN/bin

# magic flag
export FAKEBOX=1

###
### pkg tools
###
source ${FB_MAKEPKG_CONF:-makepkg.conf}

###
### qemu
###

if [ -n "$FB_QEMU" ]; then
	MAGIC=`
	echo -n "\x7f\x45\x4c\x46\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
	case "$FB_QEMU" in
		ppc)  echo -n "\x14";;
		mips) echo -n "\x08";;
		*)    echo "Unsupported arch: $FB_QEMU" >&2; exit 1;;
	esac
	`
	MASK="\xff\xff\xff\xff\x00\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff"
	MAGIC_PLAIN=${MAGIC//\\x/}
	MASK_PLAIN=${MASK//\\x/}

	# check if binfmt_misc is already loaded
	if [ ! -e /proc/sys/fs/binfmt_misc/register ]; then
		echo "Using sudo to load and init binfmt_misc module"
		sudo modprobe binfmt_misc || exit 1
		sudo mount -t binfmt_misc none /proc/sys/fs/binfmt_misc || exit 1
	fi

	# remove any existing registration with the same magic
	for f in /proc/sys/fs/binfmt_misc/*; do
		[ "`basename $f`" != "register" ] || continue
		[ "`basename $f`" != "fakebox-$FB_QEMU" ] || continue
		[ -e "$f" ] || exit 1
		grep -q "magic $MAGIC_PLAIN" $f || continue
		grep -q "mask $MASK_PLAIN" $f || continue
		echo -e "\nWarning: Removing existing binfmt_misc wrapper: `basename $f` (using sudo)"
		echo "-1" | sudo dd of=$f status=noxfer || exit 1
	done

	if [ ! -f /proc/sys/fs/binfmt_misc/fakebox-$FB_QEMU ]; then
		[ "`id -u`" != "0" ] && \
			echo -e "\nWarning: Using sudo to register $FB_QEMU qemu wrapper"

		# register us
		echo "Registering fakebox-$FB_QEMU in binfmt_misc"
		echo ":fakebox-$FB_QEMU:M:0:$MAGIC:$MASK:$FB_PATH/wrappers/qemuwrap:" | \
			sudo dd of=/proc/sys/fs/binfmt_misc/register status=noxfer || exit 1
	fi
fi

###
### start
###

# run shell
/bin/bash --noprofile --rcfile "${FB_BASHRC:-$FB_PATH/bashrc}"
